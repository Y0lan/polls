version: 2.1 # version de circleci à utiliser
orbs: # library
  maven: circleci/maven@1.2.0 # pouvoir mettre maven à disposition sur le cloud
  docker: circleci/docker@1.5.0 # pouvoir mettre maven à disposition sur le cloud


jobs: # début des actions
  start_sql_server:  # action principales qui va lancer des sous action
    machine: true
    steps: #étapes des actions à effectuer sur la vm ubuntu
      - checkout # git clone du projet
      - run: # liste des actions à executer
          name: Install essential tools
          command: | # lance les commandes suivantes pour 1) afficher en mode débug 2) charger les packets disponible à l'installation 3) install tar jq maven et wget
            set -x
            apt update
            DEBIAN_FRONTEND=noninteractive apt-get install -y curl tar jq maven wget
      - docker/install-docker # install docker
      - docker/install-docker-compose # et docker-compose
      - run: # lance les actions suivantes
          name: Start container and verify it is working
          command: |
            set -x
            mv db.env.example db.env
            sed -i "s/<MYSQL_PASSWORD>/$MYSQL_ROOT_PASSWORD/g" db.env
            ls -l

            mv ./src/main/resources/application.properties.example ./src/main/resources/application.properties
            sed -i "s/<MYSQL_PASSWORD>/$MYSQL_ROOT_PASSWORD/g" ./src/main/resources/application.properties
            sed -i "s/<JWT_SECRET>/$JWT_SECRET/g" ./src/main/resources/application.properties

            cat ./src/main/resources/application.properties
            cat ./db.env

            cat ./sql/scripts/init.sql
            mkdir -p ./sql/database

            mvn clean package -DskipTests
            docker-compose up -d
            sleep 15

            IP=$(docker inspect -f \'{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' polls-mysql | tr -d \')
            echo "$IP db" >> /etc/hosts
            cat /etc/hosts

            mvn test







workflows:
    test:
      jobs:
        - start_sql_server
        
